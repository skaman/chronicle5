// Copyright (c) 2022 Sandro Cavazzoni.
// Licensed under the MIT license.
// See LICENSE file in the project root for full license information.

#include "glfw_map.h"

#include "glfw_platform.h"

namespace chr::internal {

auto GetGlfwKeyMap() -> std::unordered_map<int, Key> {
  return {
      {GLFW_KEY_SPACE, Key::kSpace},
      {GLFW_KEY_APOSTROPHE, Key::kApostrophe},
      {GLFW_KEY_COMMA, Key::kComma},
      {GLFW_KEY_MINUS, Key::kMinus},
      {GLFW_KEY_PERIOD, Key::kPeriod},
      {GLFW_KEY_SLASH, Key::kSlash},
      {GLFW_KEY_0, Key::k0},
      {GLFW_KEY_1, Key::k1},
      {GLFW_KEY_2, Key::k2},
      {GLFW_KEY_3, Key::k3},
      {GLFW_KEY_4, Key::k4},
      {GLFW_KEY_5, Key::k5},
      {GLFW_KEY_6, Key::k6},
      {GLFW_KEY_7, Key::k7},
      {GLFW_KEY_8, Key::k8},
      {GLFW_KEY_9, Key::k9},
      {GLFW_KEY_SEMICOLON, Key::kSemicolon},
      {GLFW_KEY_EQUAL, Key::kEqual},
      {GLFW_KEY_A, Key::kA},
      {GLFW_KEY_B, Key::kB},
      {GLFW_KEY_C, Key::kC},
      {GLFW_KEY_D, Key::kD},
      {GLFW_KEY_E, Key::kE},
      {GLFW_KEY_F, Key::kF},
      {GLFW_KEY_G, Key::kG},
      {GLFW_KEY_H, Key::kH},
      {GLFW_KEY_I, Key::kI},
      {GLFW_KEY_J, Key::kJ},
      {GLFW_KEY_K, Key::kK},
      {GLFW_KEY_L, Key::kL},
      {GLFW_KEY_M, Key::kM},
      {GLFW_KEY_N, Key::kN},
      {GLFW_KEY_O, Key::kO},
      {GLFW_KEY_P, Key::kP},
      {GLFW_KEY_Q, Key::kQ},
      {GLFW_KEY_R, Key::kR},
      {GLFW_KEY_S, Key::kS},
      {GLFW_KEY_T, Key::kT},
      {GLFW_KEY_U, Key::kU},
      {GLFW_KEY_V, Key::kV},
      {GLFW_KEY_W, Key::kW},
      {GLFW_KEY_X, Key::kX},
      {GLFW_KEY_Y, Key::kY},
      {GLFW_KEY_Z, Key::kZ},
      {GLFW_KEY_LEFT_BRACKET, Key::kLeftBracket},
      {GLFW_KEY_BACKSLASH, Key::kBackSlash},
      {GLFW_KEY_RIGHT_BRACKET, Key::kRightBracket},
      {GLFW_KEY_GRAVE_ACCENT, Key::kGraceAccent},
      {GLFW_KEY_WORLD_1, Key::kWorld1},
      {GLFW_KEY_WORLD_2, Key::kWorld2},
      {GLFW_KEY_ESCAPE, Key::kEscape},
      {GLFW_KEY_ENTER, Key::kEnter},
      {GLFW_KEY_TAB, Key::kTab},
      {GLFW_KEY_BACKSPACE, Key::kBackspace},
      {GLFW_KEY_INSERT, Key::kInsert},
      {GLFW_KEY_DELETE, Key::kDel},
      {GLFW_KEY_RIGHT, Key::kRight},
      {GLFW_KEY_LEFT, Key::kLeft},
      {GLFW_KEY_DOWN, Key::kDown},
      {GLFW_KEY_UP, Key::kUp},
      {GLFW_KEY_PAGE_UP, Key::kPageUp},
      {GLFW_KEY_PAGE_DOWN, Key::kPageDown},
      {GLFW_KEY_HOME, Key::kHome},
      {GLFW_KEY_END, Key::kEnd},
      {GLFW_KEY_CAPS_LOCK, Key::kCapsLock},
      {GLFW_KEY_SCROLL_LOCK, Key::kScrollLock},
      {GLFW_KEY_NUM_LOCK, Key::kNumLock},
      {GLFW_KEY_PRINT_SCREEN, Key::kPrintScreen},
      {GLFW_KEY_PAUSE, Key::kPause},
      {GLFW_KEY_F1, Key::kF1},
      {GLFW_KEY_F2, Key::kF2},
      {GLFW_KEY_F3, Key::kF3},
      {GLFW_KEY_F4, Key::kF4},
      {GLFW_KEY_F5, Key::kF5},
      {GLFW_KEY_F6, Key::kF6},
      {GLFW_KEY_F7, Key::kF7},
      {GLFW_KEY_F8, Key::kF8},
      {GLFW_KEY_F9, Key::kF9},
      {GLFW_KEY_F10, Key::kF10},
      {GLFW_KEY_F11, Key::kF11},
      {GLFW_KEY_F12, Key::kF12},
      {GLFW_KEY_F13, Key::kF13},
      {GLFW_KEY_F14, Key::kF14},
      {GLFW_KEY_F15, Key::kF15},
      {GLFW_KEY_F16, Key::kF16},
      {GLFW_KEY_F17, Key::kF17},
      {GLFW_KEY_F18, Key::kF18},
      {GLFW_KEY_F19, Key::kF19},
      {GLFW_KEY_F20, Key::kF20},
      {GLFW_KEY_F21, Key::kF21},
      {GLFW_KEY_F22, Key::kF22},
      {GLFW_KEY_F23, Key::kF23},
      {GLFW_KEY_F24, Key::kF24},
      {GLFW_KEY_F25, Key::kF25},
      {GLFW_KEY_KP_0, Key::kKp0},
      {GLFW_KEY_KP_1, Key::kKp1},
      {GLFW_KEY_KP_2, Key::kKp2},
      {GLFW_KEY_KP_3, Key::kKp3},
      {GLFW_KEY_KP_4, Key::kKp4},
      {GLFW_KEY_KP_5, Key::kKp5},
      {GLFW_KEY_KP_6, Key::kKp6},
      {GLFW_KEY_KP_7, Key::kKp7},
      {GLFW_KEY_KP_8, Key::kKp8},
      {GLFW_KEY_KP_9, Key::kKp9},
      {GLFW_KEY_KP_DECIMAL, Key::kKpDecimal},
      {GLFW_KEY_KP_DIVIDE, Key::kKpDivide},
      {GLFW_KEY_KP_MULTIPLY, Key::kKpMultiply},
      {GLFW_KEY_KP_SUBTRACT, Key::kKpSubtract},
      {GLFW_KEY_KP_ADD, Key::kKpAdd},
      {GLFW_KEY_KP_ENTER, Key::kKpEnter},
      {GLFW_KEY_KP_EQUAL, Key::kKpEqual},
      {GLFW_KEY_LEFT_SHIFT, Key::kLeftShift},
      {GLFW_KEY_LEFT_CONTROL, Key::kLeftControl},
      {GLFW_KEY_LEFT_ALT, Key::kLeftAlt},
      {GLFW_KEY_LEFT_SUPER, Key::kLeftSuper},
      {GLFW_KEY_RIGHT_SHIFT, Key::kRightShift},
      {GLFW_KEY_RIGHT_CONTROL, Key::kRightControl},
      {GLFW_KEY_RIGHT_ALT, Key::kRightAlt},
      {GLFW_KEY_RIGHT_SUPER, Key::kRightSuper},
      {GLFW_KEY_MENU, Key::kMenu},
  };
}

auto GetGlfwMouseButtonMap() -> std::unordered_map<int, MouseButton> {
  return {
      {GLFW_MOUSE_BUTTON_1, MouseButton::kButton1},
      {GLFW_MOUSE_BUTTON_2, MouseButton::kButton2},
      {GLFW_MOUSE_BUTTON_3, MouseButton::kButton3},
      {GLFW_MOUSE_BUTTON_4, MouseButton::kButton4},
      {GLFW_MOUSE_BUTTON_5, MouseButton::kButton5},
      {GLFW_MOUSE_BUTTON_6, MouseButton::kButton6},
      {GLFW_MOUSE_BUTTON_7, MouseButton::kButton7},
      {GLFW_MOUSE_BUTTON_8, MouseButton::kButton8},
  };
}

}  // namespace chr